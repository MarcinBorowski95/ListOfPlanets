{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Planets/components/pagination/pagination.component.html","webpack:///./src/app/Planets/components/pagination/pagination.component.scss","webpack:///./src/app/Planets/components/pagination/pagination.component.ts","webpack:///./src/app/Planets/components/planet-list/planet-list.component.html","webpack:///./src/app/Planets/components/planet-list/planet-list.component.scss","webpack:///./src/app/Planets/components/planet-list/planet-list.component.ts","webpack:///./src/app/Planets/components/planet/planet.component.html","webpack:///./src/app/Planets/components/planet/planet.component.scss","webpack:///./src/app/Planets/components/planet/planet.component.ts","webpack:///./src/app/Planets/model/planet.model.ts","webpack:///./src/app/Planets/services/swapi.service.ts","webpack:///./src/app/Planets/utils/compute-api-page.ts","webpack:///./src/app/Planets/utils/compute-first-api-result-index.ts","webpack:///./src/app/Planets/utils/compute-number-of-api-pages.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/store/app.effects.ts","webpack:///./src/app/store/app.reducers.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"d-flex flex-row justify-content-center align-items-center\\\">\\n  <ngb-pagination class=\\\"mt-3 mr-4\\\"\\n                  [page]=\\\"page\\\"\\n                  (pageChange)=\\\"onPageChange($event)\\\"\\n                  [pageSize]=\\\"pageSize\\\"\\n                  [collectionSize]=\\\"collectionSize\\\"></ngb-pagination>\\n  <div class=\\\"btn-group\\\">\\n    <div *ngFor=\\\"let setPageSize of pageSizes\\\" class=\\\"btn btn-primary\\\"\\n         (click)=\\\"changePageSize(setPageSize)\\\"> {{setPageSize}} </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BsYW5ldHMvY29tcG9uZW50cy9wYWdpbmF0aW9uL3BhZ2luYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit {\n  @Input() page: number;\n  @Input() pageSize: number;\n  @Input() collectionSize: number;\n  @Output() pageChange: EventEmitter<number> = new EventEmitter();\n  @Output() pageSizeChange: EventEmitter<number> = new EventEmitter();\n\n  pageSizes: Array<number> = [5, 10, 25, 100];\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onPageChange(event: number) {\n    this.pageChange.emit(event)\n  }\n\n  changePageSize(size: number) {\n    this.pageSizeChange.emit(size)\n  }\n}\n","module.exports = \"<ngx-spinner\\n  bdOpacity = 0.9\\n  bdColor = \\\"white\\\"\\n  size = \\\"large\\\"\\n  color = \\\"#2f7aff\\\"\\n  type = \\\"ball-atom\\\"\\n  fullScreen = \\\"true\\\">\\n  <p style=\\\"color: cornflowerblue\\\" > Loading Planets </p>\\n</ngx-spinner>\\n<div *ngIf=\\\"filteredPlanets\\\">\\n  <div class=\\\"form-group m-3\\\">\\n    <label for=\\\"search\\\"><h4>Search for planet:</h4></label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" id=\\\"search\\\" [ngModel]=\\\"querySubject | async\\\"\\n           (ngModelChange)=\\\"onQueryChange($event)\\\">\\n  </div>\\n\\n  <app-pagination [page]=\\\"pageSubject | async\\\"\\n                  [pageSize]=\\\"pageSizeSubject | async\\\"\\n                  [collectionSize]=\\\"collectionSize\\\"\\n                  (pageChange)=\\\"onPageChange($event)\\\"\\n                  (pageSizeChange)=\\\"changePageSize($event)\\\"></app-pagination>\\n\\n  <div class=\\\"list-group m-3\\\">\\n    <a class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\"\\n       *ngFor=\\\"let planet of filteredPlanets\\\"\\n       [routerLink]=\\\"['/planet', planet.id]\\\">\\n      <div class=\\\"d-flex w-100 justify-content-between\\\">\\n        <h5 class=\\\"mb-1\\\">{{planet.name}}</h5>\\n        <small>Climate: {{planet.climate}}</small>\\n      </div>\\n    </a>\\n  </div>\\n\\n  <app-pagination [page]=\\\"pageSubject | async\\\"\\n                  [pageSize]=\\\"pageSizeSubject | async\\\"\\n                  [collectionSize]=\\\"collectionSize\\\"\\n                  (pageChange)=\\\"onPageChange($event)\\\"\\n                  (pageSizeChange)=\\\"changePageSize($event)\\\"></app-pagination>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BsYW5ldHMvY29tcG9uZW50cy9wbGFuZXQtbGlzdC9wbGFuZXQtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PlanetModel } from \"../../model/planet.model\";\nimport { BehaviorSubject, combineLatest } from \"rxjs\";\nimport { debounceTime, map, switchMap, takeWhile, tap } from \"rxjs/operators\";\nimport { SwapiService } from \"../../services/swapi.service\";\nimport { PlanetListModel } from \"../../model/planet-list.model\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-planet-list',\n  templateUrl: './planet-list.component.html',\n  styleUrls: ['./planet-list.component.scss']\n})\nexport class PlanetListComponent implements OnInit, OnDestroy{\n  filteredPlanets: PlanetModel[];\n  collectionSize: number;\n  private querySubject: BehaviorSubject<string>;\n  private pageSubject: BehaviorSubject<number>;\n  private pageSizeSubject: BehaviorSubject<number>;\n  private alive = true;\n\n  constructor(private service: SwapiService, private spinner: NgxSpinnerService) {\n    this.querySubject = new BehaviorSubject('');\n    this.pageSubject = new BehaviorSubject(1);\n    this.pageSizeSubject = new BehaviorSubject(5);\n    combineLatest(\n      this.querySubject,\n      this.pageSubject,\n      this.pageSizeSubject,\n    ).pipe(\n      map(([query, page, pageSize]) => ({query, page, pageSize})),\n      debounceTime(300),\n      tap(() => this.spinner.show()),\n      switchMap((args) => this.service.fetchPlanetsPaginated(args)),\n      takeWhile(() => this.alive),\n    ).subscribe((results: PlanetListModel) => {\n      this.filteredPlanets = results.planets.splice(0, results.planets.length - results.errorNumber);\n      this.collectionSize = results.listSize;\n      this.spinner.hide()\n    })\n  }\n\n  ngOnInit(): void {\n    this.spinner.show();\n  }\n\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n\n  onQueryChange(val: string) {\n    this.pageSubject.next(1);\n    this.querySubject.next(val);\n  }\n\n  changePageSize(size: number) {\n    this.pageSubject.next(1);\n    this.pageSizeSubject.next(size);\n  }\n\n  onPageChange(page: number) {\n    this.pageSubject.next(page);\n  }\n}\n","module.exports = \"<ngx-spinner\\n  bdOpacity = 0.9\\n  bdColor = \\\"white\\\"\\n  size = \\\"large\\\"\\n  color = \\\"#2f7aff\\\"\\n  type = \\\"ball-atom\\\"\\n  fullScreen = \\\"true\\\">\\n  <p style=\\\"color: cornflowerblue\\\" > Loading Planet </p>\\n</ngx-spinner>\\n<div class=\\\"container w-50 h-50 mt-3\\\">\\n  <button class=\\\"btn btn-lg btn-primary w-50\\\"\\n          style=\\\"border-radius: 5px 5px 0 0\\\"\\n          [routerLink]=\\\"['/planet-list']\\\"> Back to planet list </button>\\n  <div class=\\\"card card-image shadow\\\" *ngIf=\\\"planet$ | async as planet\\\"\\n       style=\\\"background-image: url(http://s1.picswalls.com/wallpapers/2016/06/16/latest-planet-wallpaper_115144863_310.jpg);\\n       border-radius: 0 5px 5px 5px;\\\">\\n    <div class=\\\"text-white text-center rgba-stylish-strong p-0\\\">\\n      <div class=\\\"p-2\\\">\\n        <h1 class=\\\"card-title\\\">{{planet.name}}</h1>\\n        <div class=\\\"list-group d-flex align-items-center mb-3 text-black-50\\\">\\n          <p class=\\\"list-group-item w-75\\\">Climate: {{planet.climate}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Terrain: {{planet.terrain}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Water surface: {{planet.surface_water}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Population: {{planet.population}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Gravity: {{planet.gravity}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Diameter: {{planet.diameter}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Orbital period: {{planet.orbital_period}}</p>\\n          <p class=\\\"list-group-item w-75\\\">Rotation period: {{planet.rotation_period}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BsYW5ldHMvY29tcG9uZW50cy9wbGFuZXQvcGxhbmV0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { SwapiService } from \"../../services/swapi.service\";\nimport { Observable } from \"rxjs\";\nimport { PlanetModel } from \"../../model/planet.model\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-planet',\n  templateUrl: './planet.component.html',\n  styleUrls: ['./planet.component.scss']\n})\nexport class PlanetComponent implements OnInit {\n  planet$: Observable<PlanetModel>;\n\n  constructor(private route: ActivatedRoute, private service: SwapiService, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.planet$ = this.route.paramMap.pipe(\n      tap(() => this.spinner.show()),\n      switchMap((params: ParamMap) => this.service.fetchPlanet(+params.get('id'))),\n      tap(() => this.spinner.hide()),\n    )\n  }\n\n}\n","import { PlanetDto } from \"../Dto/planet.dto\";\r\n\r\nexport class PlanetModel {\r\n  id: number = null;\r\n  name: string = null;\r\n  rotation_period: number = null;\r\n  orbital_period: number = null;\r\n  diameter: number = null;\r\n  climate: string = null;\r\n  gravity: string = null;\r\n  terrain: string = null;\r\n  surface_water: number = null;\r\n  population: number = null;\r\n}\r\n\r\nexport function fromDtoToModelPlanet (planetDto: PlanetDto): PlanetModel {\r\n  return {\r\n    id: +planetDto.url.match(/\\d+/),\r\n    name: planetDto.name,\r\n    rotation_period: +planetDto.rotation_period,\r\n    orbital_period: +planetDto.orbital_period,\r\n    diameter: +planetDto.diameter,\r\n    climate: planetDto.climate,\r\n    gravity: planetDto.gravity,\r\n    terrain: planetDto.terrain,\r\n    surface_water: +planetDto.surface_water,\r\n    population: +planetDto.population,\r\n  }\r\n}\r\n\r\nexport function fromDtoToModelPlanets(planetsDto: PlanetDto[]): PlanetModel[] {\r\n  return planetsDto.map((planet) => fromDtoToModelPlanet(planet));\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { forkJoin, Observable, of } from \"rxjs\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { PlanetListPageDto } from \"../Dto/planet-list-page.dto\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { fromDtoToModelPlanet, fromDtoToModelPlanets, PlanetModel } from \"../model/planet.model\";\nimport { computeNumberOfApiPages } from \"../utils/compute-number-of-api-pages\";\nimport { computeApiPage } from \"../utils/compute-api-page\";\nimport { computeFirstApiResultIndex } from \"../utils/compute-first-api-result-index\";\nimport { PlanetListModel } from \"../model/planet-list.model\";\nimport { PlanetDto } from \"../Dto/planet.dto\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwapiService {\n\n  planetsUrl: string = 'https://swapi.co/api/planets/';\n\n  constructor(private http: HttpClient) {\n  }\n\n  fetchPlanetsPaginated(args: { query: string, page: number, pageSize: number }): Observable<PlanetListModel> {\n    const {query, page, pageSize} = args;\n    const apiPageSize = 10;\n    const firstPage = computeApiPage({page, pageSize, apiPageSize});\n    let listSize: number;\n    let errorNumber = 0;\n    const requests = Array.from(\n      {length: computeNumberOfApiPages({page, pageSize, apiPageSize})},\n      (_, i) => {\n        const params = {\n          page: (firstPage + i).toString(),\n          search: query,\n        };\n        return this.http.get<PlanetListPageDto>(this.planetsUrl, {params}).pipe(\n          map((dto: PlanetListPageDto) => {\n            listSize = dto.count;\n            return fromDtoToModelPlanets(dto.results)\n          }),\n          catchError((err) => {\n            errorNumber++;\n            return of(err)\n          })\n        )\n      }\n    );\n    return forkJoin(requests).pipe(\n      map((responses) => responses.reduce((flat, next) => flat.concat(next), [])),\n      map((planets) => {\n        const first = computeFirstApiResultIndex({page, pageSize, apiPageSize});\n        const last = first + pageSize;\n        return {listSize: listSize, planets: planets.splice(first, last), errorNumber: errorNumber}\n      }),\n    );\n  }\n\n  fetchPlanet(id: number): Observable<PlanetModel> {\n    return this.http.get<PlanetDto>(this.planetsUrl + id.toString()).pipe(\n      map((dto: PlanetDto) => fromDtoToModelPlanet(dto))\n    );\n  }\n}\n","export function computeApiPage(args:{page: number, pageSize: number, apiPageSize: number}): number {\r\n  const{page, pageSize, apiPageSize} = args;\r\n\r\n  return Math.ceil((((page-1)*pageSize)+1)/apiPageSize);\r\n}\r\n","export function computeFirstApiResultIndex(args: { page: number, pageSize: number, apiPageSize: number }): number {\r\n  const {page, pageSize, apiPageSize} = args;\r\n\r\n  return ((page - 1) * pageSize % apiPageSize);\r\n}\r\n","import { computeFirstApiResultIndex } from \"./compute-first-api-result-index\";\r\n\r\nexport function computeNumberOfApiPages(args: { page: number, pageSize: number, apiPageSize: number }): number {\r\n  const {pageSize, apiPageSize} = args;\r\n\r\n  return Math.ceil((computeFirstApiResultIndex(args) + pageSize) / apiPageSize);\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlanetListComponent } from \"./Planets/components/planet-list/planet-list.component\";\nimport { PlanetComponent } from \"./Planets/components/planet/planet.component\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\n\nconst routes: Routes = [\n  {path: 'planet-list', component: PlanetListComponent, data: {title: 'Planet list'}},\n  {path: 'planet/:id', component: PlanetComponent},\n  {path: '', redirectTo: 'planet-list', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ListOfPlanets';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { reducers, metaReducers } from './store/app.reducers';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { AppEffects } from './store/app.effects';\r\nimport { environment } from \"../environments/environment\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { PlanetListComponent } from './Planets/components/planet-list/planet-list.component';\r\nimport { PaginationComponent } from './Planets/components/pagination/pagination.component';\r\nimport { PlanetComponent } from './Planets/components/planet/planet.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PlanetListComponent,\r\n    PaginationComponent,\r\n    PlanetComponent,\r\n    PageNotFoundComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    StoreModule.forRoot(reducers, {metaReducers}),\r\n    EffectsModule.forRoot([AppEffects]),\r\n    !environment.production ? StoreDevtoolsModule.instrument() : []\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<h1> 404 page not found </h1>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n\r\n\r\n\r\n  constructor(private actions$: Actions) {}\r\n\r\n}\r\n","import {\r\n  ActionReducer,\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  createSelector,\r\n  MetaReducer\r\n} from '@ngrx/store';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface State {\r\n\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n\r\n};\r\n\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}